# References regarding our base image:
# - ubuntu:22.04
# - pangeo/base-image definition:       https://github.com/pangeo-data/pangeo-docker-images/blob/master/base-image
# - pangeo/pytorch-notebook definition: https://github.com/pangeo-data/pangeo-docker-images/tree/master/pytorch-notebook
# - pangeo/pytorch-notebook tags:       https://hub.docker.com/r/pangeo/pytorch-notebook/tags
# - pytorch-notebook conda package:     https://github.com/conda-forge/pytorch-notebook-feedstock/blob/master/recipe/meta.yaml
#
FROM pangeo/pytorch-notebook:master

# While NB_GID is often defined in these jupyter images, it isn't for
# pangeo/base-image and derivative images. Let's define it here so copy pasting
# various Dockerfile snippets will work.
ENV NB_GID=$NB_UID

USER root
# We only need to install packages not listed in this file already:
# https://github.com/pangeo-data/pangeo-docker-images/blob/master/pytorch-notebook/apt.txt
RUN echo "Installing apt-get packages..." \
 && apt-get -y update > /dev/null \
 && apt-get -y install \
        curl \
        mc \
            # powerful terminal-based file manager, better than the one in JLab
        build-essential gfortran \
            # Regular build tools for compiling common stuff
        texlive-xetex texlive-fonts-recommended texlive-plain-generic \
            # Dependencies for nbconvert
        rsync \
            # for use with jupyterhub-ssh, generate a token at
            # hub.jupytearth.org/hub/token and connect to
            # <hub-username>@hub.jupytearth.org using the token as password
        unrar \
            # zipp is installed in the base image, but I think zipp provides
            # `zip` and `unzip` which doesn't help us decompress .rar files. See
            # https://github.com/pangeo-data/pangeo-docker-images/issues/366 for
            # an issue about installing this in the base image.
        gnupg \
        software-properties-common \
    # chown $HOME to workaround that the xorg installation creates a
    # /home/jovyan/.cache directory owned by root
 && chown -R $NB_UID:$NB_GID $HOME \
 && rm -rf /var/lib/apt/lists/*



# Install the nix package manager, step 1/2
RUN mkdir -m 0755 /nix \
 && chown jovyan /nix


# Switch user away from ROOT for the rest
USER ${NB_USER}


# Install the nix package manager, step 2/2
RUN curl -L https://nixos.org/nix/install | sh


# We only need to install packages not listed in this file already:
# https://github.com/pangeo-data/pangeo-docker-images/blob/master/pytorch-notebook/packages.txt
RUN echo "Installing conda packages..." \
 && mamba install -n ${CONDA_ENV} -y --no-deps \
        plotly \
            # NOTE: Plotly can downgrade ipywidgets in a sneaky way via "run
            #       constrained", which won't show up using conda-tree's command
            #       deptree. https://github.com/plotly/plotly.py/issues/3686 can
            #       be tracked know when we can install plotly again normally.
            #
            # https://anaconda.org/conda-forge/plotly
            # https://github.com/conda-forge/plotly-feedstock/blob/main/recipe/meta.yaml
        tenacity \
            # tenancity is plotly's only dependency
 && mamba install -n ${CONDA_ENV} -y \
        # temporary upgrades, because sometimes we wish to have a more modern
        # version than installed in the base image.
        #
        # visualization:
        altair \
            # https://anaconda.org/conda-forge/altair
            # https://github.com/conda-forge/altair-feedstock/blob/main/recipe/meta.yaml
        bqplot \
            # https://anaconda.org/conda-forge/bqplot
            # https://github.com/conda-forge/bqplot-feedstock/blob/main/recipe/meta.yaml
        python-kaleido \
            # https://anaconda.org/conda-forge/python-kaleido
            # https://github.com/conda-forge/python-kaleido-feedstock/blob/main/recipe/meta.yaml
        seaborn \
            # https://anaconda.org/conda-forge/seaborn
            # https://github.com/conda-forge/seaborn-feedstock/blob/main/recipe/meta.yaml
        ipycanvas \
            # https://anaconda.org/conda-forge/ipycanvas
            # https://github.com/conda-forge/ipycanvas-feedstock/blob/main/recipe/meta.yaml
        ipympl \
            # https://anaconda.org/conda-forge/ipympl
            # https://github.com/conda-forge/ipympl-feedstock/blob/main/recipe/meta.yaml
        jupyter_bokeh \
            # https://anaconda.org/conda-forge/jupyter_bokeh
            # https://github.com/conda-forge/jupyter_bokeh-feedstock/blob/main/recipe/meta.yaml
        jupyterlab-geojson \
            # https://anaconda.org/conda-forge/jupyterlab-geojson
            # https://github.com/conda-forge/jupyterlab-geojson-feedstock/blob/main/recipe/meta.yaml
        #
        # common geospatial dependencies:
        qgis \
            # https://anaconda.org/conda-forge/qgis
            # https://github.com/conda-forge/qgis-feedstock/blob/main/recipe/meta.yaml
            #
            # We install this as an apt-get package but on startup we got errors
            # about Python integration not being available. But installing this
            # by itself didn't seem to give us the application. Installing both
            # though makes things work, but seem to cause an initial install
            # followed by a downgrade as the conda-forge version isn't as well
            # updated. It also makes the installation take ~5-10 minutes longer.
            #
            # FIXME: Install qgis in a way that provides us with a recent
            #        version, a shortcut from the desktop UI, and with Python
            #        support - without also taking 5-10 minutes more than needed
            #        to install.
            #
            # FIXME: Installing qgis downgrades pytorch and lots of other files,
            #        causing a 1 GB download. The reason is unclear.
            #
            # NOTE: qgis depends on libspatialindex, geos, proj, but not
            #       proj-data. Fernando added these as apt packages initially.
            #
        proj-data \
            # https://anaconda.org/conda-forge/proj-data
            # https://github.com/conda-forge/proj-data-feedstock/blob/main/recipe/meta.yaml
        #
        # tests and formatting:
        black \
            # https://anaconda.org/conda-forge/black
            # https://github.com/conda-forge/black-feedstock/blob/main/recipe/meta.yaml
        flake8 \
            # https://anaconda.org/conda-forge/flake8
            # https://github.com/conda-forge/flake8-feedstock/blob/main/recipe/meta.yaml
        pep8 \
            # https://anaconda.org/conda-forge/pep8
            # https://github.com/conda-forge/pep8-feedstock/blob/main/recipe/meta.yaml
        pyflakes \
            # https://anaconda.org/conda-forge/pyflakes
            # https://github.com/conda-forge/pyflakes-feedstock/blob/main/recipe/meta.yaml
        pylint \
            # https://anaconda.org/conda-forge/pylint
            # https://github.com/conda-forge/pylint-feedstock/blob/main/recipe/meta.yaml
        pytest \
            # https://anaconda.org/conda-forge/pytest
            # https://github.com/conda-forge/pytest-feedstock/blob/main/recipe/meta.yaml
        pytest-cov \
            # https://anaconda.org/conda-forge/pytest-cov
            # https://github.com/conda-forge/pytest-cov-feedstock/blob/main/recipe/meta.yaml
        #
        # documentation:
        # jupyter-book \
              # NOTE: jupyter-book is disabled as its providing upper bounds on
              #       its dependencies, and that has led to ipywidgets 8 was
              #       held back.
              #
              #       https://github.com/executablebooks/jupyter-book/issues/1898.
              #
              # https://anaconda.org/conda-forge/jupyter-book
              # https://github.com/conda-forge/jupyter-book-feedstock/blob/main/recipe/meta.yaml
        jupytext \
            # https://anaconda.org/conda-forge/jupytext
            # https://github.com/conda-forge/jupytext-feedstock/blob/main/recipe/meta.yaml
        numpydoc \
            # https://anaconda.org/conda-forge/numpydoc
            # https://github.com/conda-forge/numpydoc-feedstock/blob/main/recipe/meta.yaml
        sphinx \
            # https://anaconda.org/conda-forge/sphinx
            # https://github.com/conda-forge/sphinx-feedstock/blob/main/recipe/meta.yaml
        #
        # data:
        ipydatagrid \
            # https://anaconda.org/conda-forge/ipydatagrid
            # https://github.com/conda-forge/ipydatagrid-feedstock/blob/main/recipe/meta.yaml
        ipyparallel \
            # https://anaconda.org/conda-forge/ipyparallel
            # https://github.com/conda-forge/ipyparallel-feedstock/blob/main/recipe/meta.yaml
        lxml \
            # https://anaconda.org/conda-forge/lxml
            # https://github.com/conda-forge/lxml-feedstock/blob/main/recipe/meta.yaml
        pyhdf \
            # https://anaconda.org/conda-forge/pyhdf
            # https://github.com/conda-forge/pyhdf-feedstock/blob/main/recipe/meta.yaml
	onnx \
	    # https://anaconda.org/conda-forge/onnx
	    # https://github.com/conda-forge/onnx-feedstock/blob/main/recipe/meta.yaml
	onnxruntime \
	    # https://anaconda.org/conda-forge/onnxruntime
	    # https://github.com/conda-forge/onnxruntime-feedstock/blob/main/recipe/meta.yaml
	distributed==2023.5.0 \
	    # https://anaconda.org/conda-forge/distributed
	    # https://github.com/conda-forge/distributed-feedstock/blob/main/recipe/meta.yaml
        mhealpy \
            # https://anaconda.org/conda-forge/mhealpy
            # https://github.com/conda-forge/mhealpy-feedstock/blob/main/recipe/meta.yaml
        pytables \
            # https://anaconda.org/conda-forge/pytables
            # https://github.com/conda-forge/pytables-feedstock/blob/main/recipe/meta.yaml
        statsmodels \
            # https://anaconda.org/conda-forge/statsmodels
            # https://github.com/conda-forge/statsmodels-feedstock/blob/main/recipe/meta.yaml
        xlrd \
            # https://anaconda.org/conda-forge/xlrd
            # https://github.com/conda-forge/xlrd-feedstock/blob/main/recipe/meta.yaml
        jupyter-repo2docker \
            # https://anaconda.org/conda-forge/jupyter-repo2docker
            # https://github.com/conda-forge/jupyter-repo2docker-feedstock/blob/main/recipe/meta.yaml
        #
        # IDE:
        jupyter-vscode-proxy \
            # https://anaconda.org/conda-forge/jupyter-vscode-proxy
            # https://github.com/conda-forge/jupyter-vscode-proxy-feedstock/blob/main/recipe/meta.yaml
            # NOTE: Requires code-server to be installed.
            # https://pypi.org/project/jupyter-vscode-proxy/
        jupyterlab-link-share \
            # https://anaconda.org/conda-forge/jupyterlab-link-share
            # https://github.com/conda-forge/jupyterlab-link-share-feedstock/blob/main/recipe/meta.yaml
            # ref: https://github.com/jupyterlab-contrib/jupyterlab-link-share
        jupyterlab-git \
            # https://anaconda.org/conda-forge/jupyterlab-git
            # https://github.com/conda-forge/jupyterlab-git-feedstock/blob/main/recipe/meta.yaml
        jupyterlab-system-monitor \
            # https://anaconda.org/conda-forge/jupyterlab-system-monitor
            # https://github.com/conda-forge/jupyterlab-system-monitor-feedstock/blob/main/recipe/meta.yaml
        jupyterlab-favorites \
            # https://anaconda.org/conda-forge/jupyterlab-favorites
            # https://github.com/conda-forge/jupyterlab-favorites-feedstock/blob/main/recipe/meta.yaml
        nbdime \
            # https://anaconda.org/conda-forge/nbdime
            # https://github.com/conda-forge/nbdime-feedstock/blob/main/recipe/meta.yaml
        gh-scoped-creds \
            # https://anaconda.org/conda-forge/gh-scoped-creds
            # https://github.com/conda-forge/gh-scoped-creds-feedstock/blob/main/recipe/meta.yaml
            #
            # Additional setup instructions: https://github.com/yuvipanda/gh-scoped-creds#installation
            # Additional setup done: https://github.com/2i2c-org/infrastructure/commit/5a9f69b11727965fd4f07571c03eb65de5279fa4
            # Related issue: https://github.com/pangeo-data/jupyter-earth/issues/96
        retrolab \
            # https://anaconda.org/conda-forge/retrolab
            # https://github.com/conda-forge/retrolab-feedstock/blob/main/recipe/meta.yaml
        ipydrawio \
            # a drawio IDE launchable from jupyterlab's launcher
            # https://anaconda.org/conda-forge/ipydrawio
            # https://github.com/conda-forge/ipydrawio-feedstock/blob/main/recipe/meta.yaml
        cython \
        fortran-magic \
            # https://anaconda.org/conda-forge/fortran-magic
            # https://github.com/conda-forge/fortran-magic-feedstock/blob/main/recipe/meta.yaml
        google-cloud-sdk \
            # https://anaconda.org/conda-forge/google-cloud-sdk
            # https://github.com/conda-forge/google-cloud-sdk-feedstock/blob/main/recipe/meta.yaml
        sympy \
            # https://anaconda.org/conda-forge/sympy
            # https://github.com/conda-forge/sympy-feedstock/blob/main/recipe/meta.yaml
        # Storage related
        #
        syncthing \
            # https://anaconda.org/conda-forge/syncthing
            # We also install jupyter-syncthing-proxy from pip.
        #

 && echo "Installing conda packages complete!"


# We use a conda first approach in this Dockerfile, so only install pip packages
# if you have a clear reason to not use conda.
# https://github.com/pangeo-data/pangeo-docker-images/blob/master/pytorch-notebook/packages.txt
#
RUN echo "Installing pip packages..." \
 && export PATH=${NB_PYTHON_PREFIX}/bin:${PATH} \
 && pip install --no-cache-dir \
        # https://github.com/minrk/jupyter-keepalive/archive/main.zip \
            # This is a jupyter_server extension that is controllable via a
            # JupyterLab plugin to keep a server running.
            #
            # ref: https://github.com/minrk/jupyter-keepalive
            #
            # NOTE: Disabled as we don't have nodejs installed, making us
            #       require a pre-built wheel or installation of nodejs.
        jupyter-syncthing-proxy \
            # We install the conda-forge package syncthing along with this, as
            # this is just the glue to expose syncthing.
            #
            # ref, request:    https://github.com/pangeo-data/jupyter-earth/issues/103
            # ref, source:     https://github.com/yuvipanda/jupyter-syncthing-proxy
            # ref, dependency: https://anaconda.org/conda-forge/syncthing
        plotly-geo \
            # NOTE: This package is not available in conda (conda-forge or
            #       plotly), even though they describe it to be.
            # ref: https://github.com/plotly/plotly.py#extended-geo-support
        # jupyter-datasette-proxy \
            # FIXME: this is disabled because it malfunctions, and when it does,
            #        all other jupyter-server-proxy processes fail and we
            #        observe for example the vscode launcher entry in the
            #        jupyterlab UI disappears.
            # This package is not available in conda
 && echo "Installing pip packages complete!"

RUN echo "Installing vaex packages..." \
 && export PATH=${NB_PYTHON_PREFIX}/bin:${PATH} \
 && pip install vaex --force-reinstall \
    --find-links https://github.com/ddelange/vaex/releases/expanded_assets/core-v4.17.1.post4 \
 && echo "Installing vaex packages complete!"


# Configure conda/mamba to create new environments within the home folder by
# default. This allows the environments to remain in between restarts of the
# container if only the home folder is persisted.
RUN conda config --system --prepend envs_dirs '~/.conda/envs'


# User environment variables
# Configure PIP always installs to the user's home directory
ENV PIP_USER=True

# Set up micro as the default EDITOR (git, etc). Advanced users will reconfigure
# this to vim/emacs/etc, but this will ensure that less unix-experienced ones
# have a good first experience
ENV EDITOR=micro
ENV VISUAL=micro
